ИМЯ ФАЙЛА: 2.txt
КОЛИЧЕСТВО СТРОК В ФАЙЛЕ: 1
Тревога началась в тринадцать часов ноль две минуты.

ИМЯ ФАЙЛА: 1.txt
КОЛИЧЕСТВО СТРОК В ФАЙЛЕ: 8
Начальник полиции
лично позвонил в шестнадцатый участок. А спустя одну минуту тридцать секунд
в дежурке и других комнатах нижнего этажа раздались звонки
    Когда Иенсен -- комиссар шестнадцатого участка -- вышел из своего
кабинета, звонки еще не смолкли. Иенсен был мужчина средних лет, обычного
сложения, с лицом плоским и невыразительным. На последней ступеньке винтовой
лестницы он задержался и обвел взглядом помещение дежурки. Затем поправил
галстук и проследовал к машине.

ИМЯ ФАЙЛА: 3.txt
КОЛИЧЕСТВО СТРОК В ФАЙЛЕ: 9
В это время дня машины текли сплошным блестящим потоком, а среди
потока, будто колонны из бетона и стекла, высились здания. Здесь, в мире
резких граней, люди на тротуарах выглядели несчастными и неприкаянными.
Одеты они были хорошо, но как-то удивительно походили друг на друга и все до
одного спешили. Они шли нестройными вереницами, широко разливались, завидев
красный светофор или металлический блеск кафе-автоматов.  Они непрестанно
озирались по сторонам и теребили портфели и сумочки.
    Полицейские машины с включенными сиренами пробивались сквозь эту
толчею.

ИМЯ ФАЙЛА: some.txt
КОЛИЧЕСТВО СТРОК В ФАЙЛЕ: 76
from os import listdir
from os.path import join, isfile, split

DIRECTORY_FILES = 'lessons_3_files'
YOUR_COPY_FILE_NAME = 'copy.txt'


def create_files_dict_from_directory(directory: str) -> dict:
    """
    DESCRIPTION:
        Функция создает dict из файлов лежащих в directory
    PARAMS:
        directory: строка директории, из которой необходимо сделать словарь
    RETURNS:
        Словарь формата: {'путь до файла': количество строк в файле}
    """
    files_names = [file for file in listdir(directory) if isfile(join(directory, file))]
    files_lines_count = dict()

    for name in files_names:
        file_path = join(directory, name)
        with open(file_path, encoding='utf-8') as file:
            files_lines_count[file_path] = 0
            for _ in file:
                files_lines_count[file_path] += 1
    return files_lines_count


def sort_dict_files(files: dict) -> dict:
    """
    DESCRIPTION
        Создает новый сортированный словарь из переданного files. Сортирует по значению ключей
    PARAMS:
        files: Словарь формата {key: value (типа int)}
    RETURNS:
        Отсортированный словарь типа {key: value}
    """
    sorted_files_count = dict()
    sorted_keys = sorted(files, key=lambda x: files[x])
    for k in sorted_keys:
        sorted_files_count[k] = files[k]
    return sorted_files_count


def create_empty_file(file_name: str) -> None:
    """
    DESCRIPTION:
        Создает пустой файл с именем file_name в корне проекта
    PARAMS:
        file_name: имя файла
    """
    with open(file_name, 'w+', encoding='utf-8') as f:
        f.write('')


def create_copy_file_from_files_dict(copy_file_name: str, files: dict) -> None:
    """
    DESCRIPTION:
        Создает в корне проекта файл с именем copy_file_name и копирует в него строки из файлов в словаре FILES
    PARAMS:
        copy_file_name: имя файла, который создается в корне проекта.
        files: словарь с файлами из которых нужно копировать строки.
    """
    create_empty_file(copy_file_name)
    for file_path, value in files.items():
        file_name = split(file_path)[-1]
        with open(file_path, encoding='utf-8') as f:
            with open(copy_file_name, 'a', encoding='utf-8') as copy_file:
                copy_file.write('ИМЯ ФАЙЛА: ' + file_name + '\n')
                copy_file.write('КОЛИЧЕСТВО СТРОК В ФАЙЛЕ: ' + str(value) + '\n')
                copy_file.writelines(f.readlines())
                copy_file.write('\n\n')


files_count = sort_dict_files(create_files_dict_from_directory(DIRECTORY_FILES))
create_copy_file_from_files_dict(YOUR_COPY_FILE_NAME, files_count)


